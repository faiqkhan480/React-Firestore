{"version":3,"sources":["config/firebase.js","routes/auth.js","routes/protectedRoute.js","routes/unprotectedRoute.js","components/home.js","components/profile.js","components/login.js","components/signup.js","components/footer.js","components/nav.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","AuthContext","React","createContext","AuthProvider","props","state","currentUser","auth","onAuthStateChanged","user","console","log","setState","this","Provider","value","children","Component","ProtectedRoute","RouteComponent","rest","useContext","render","routeProps","to","UnProtectedRoute","component","Home","splashing","loading","fetch","unsplashimg","then","response","className","Container","Spinner","animation","Card","text","border","Img","variant","src","title","Profile","uid","data","post","signOut","delete","history","push","catch","error","e","target","name","event","preventDefault","collection","doc","add","date","Date","res","Row","Col","lg","ListGroup","Item","Form","md","sm","xs","Control","type","placeholder","Button","Login","email","password","setTimeout","signInWithEmailAndPassword","style","width","height","onSubmit","handleSubmit","bind","FormGroup","Label","for","onChange","handleChange","Signup","phone","createUserWithEmailAndPassword","a","async","updateProfile","displayName","userUid","set","err","Footer","href","size","icon","faGithub","Menu","Navbar","Brand","Toggle","Collapse","Text","App","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efea47fb.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyCsc_C7QIiBzCpPcyKBsFvsuEccHHOW-a8\",\r\n    authDomain: \"todo-c64e8.firebaseapp.com\",\r\n    databaseURL: \"https://todo-c64e8.firebaseio.com\",\r\n    projectId: \"todo-c64e8\",\r\n    storageBucket: \"todo-c64e8.appspot.com\",\r\n    messagingSenderId: \"867932857254\",\r\n    appId: \"1:867932857254:web:92f8cbf72bf352f1332567\",\r\n    measurementId: \"G-4LGGPN3MGY\"\r\n};\r\n\r\nconst fire =  firebase.initializeApp(config);\r\nexport const db = firebase.firestore(fire);\r\n\r\nexport default fire","import React, { useEffect, useState, Component } from \"react\";\r\nimport fire from \"../config/firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nclass AuthProvider extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentUser: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fire.auth().onAuthStateChanged(user => {\r\n            console.log(user, 'auth=-==-')\r\n            this.setState({currentUser: user})\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {currentUser} = this.state\r\n        return(\r\n            <AuthContext.Provider\r\n                value={{\r\n                    currentUser\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </AuthContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthProvider","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./auth\";\r\n\r\n\r\nconst ProtectedRoute = ({Component: RouteComponent, ...rest}) => {\r\n    const {currentUser} = useContext(AuthContext);\r\n    console.log(currentUser, 'cureenttuser')\r\n    return(\r\n        <Route {...rest} render={routeProps =>\r\n            !!currentUser ? (\r\n                <RouteComponent {...routeProps}/>\r\n            ) : (\r\n                <Redirect to={\"/login\"} />\r\n            )\r\n        }/>\r\n    )\r\n};\r\n\r\nexport default ProtectedRoute","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./auth\";\r\n\r\nconst UnProtectedRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const {currentUser} = useContext(AuthContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props =>\r\n                !currentUser ? (\r\n                    <RouteComponent {...props} />\r\n                ) : (\r\n                    <Redirect to={\"/profile\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport default UnProtectedRoute","import React, { Component } from 'react';\nimport {Card, Container, Spinner} from \"react-bootstrap\";\n\n\nclass Home extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            splashing: 'https://source.unsplash.com/1280x750/',\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        fetch(this.state.unsplashimg).then((response)=> {\n            this.setState({\n                loading: false,\n            })\n        })\n    }\n\n    render() {\n        const { splashing, loading } = this.state\n        console.log(splashing, \"in render\")\n        return(\n            <div className=\"wrapper\">\n                <Container>\n                    { !loading ?\n                            <Card text=\"white\" className=\"text-center p-3 banner\" border=\"light\">\n                                <Card.Img variant=\"top\" src={`${splashing}?todo`} />\n                                <blockquote className=\"blockquote mb-0 card-body\">\n                                    <footer className=\"blockquote-footer\">\n                                        <small className=\"text-muted\">\n                                            Make your<cite title=\"Source Title\"> Todos</cite>\n                                        </small>\n                                    </footer>\n                                </blockquote>\n                            </Card>\n                        :\n                        <div className=\"post-loading\">\n                            <Spinner animation=\"grow\" />\n                        </div>\n                    }\n                </Container>\n\n            </div>\n        )\n    }\n}\n\nexport default Home","import React from 'react';\nimport firebase from \"firebase\";\nimport fire, { db } from \"../config/firebase\";\nimport {Container, Row, Col, Button, Spinner, Navbar, Form, FormControl, ListGroup} from 'react-bootstrap'\n\nclass Profile extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            uid: '',\n            data: null,\n            post: '',\n        }\n    }\n\n    // componentDidMount() {\n    //     const userUid = fire.auth().currentUser.uid;\n    //     const arr  = [];\n    //     this.setState({uid: userUid});\n    //     console.log(userUid, 'is sign in.....')\n    //     const userRef = db.collection(\"Data\").doc(userUid);\n    //     userRef.collection(\"posts\")\n    //         .onSnapshot((querySnap) => {\n    //             querySnap.forEach((doc) => {\n    //                 arr.push(doc.data())\n    //             })\n    //             this.setState({data: arr});\n    //         });\n    // }\n\n    handleLogout() {\n        fire.auth().signOut();\n    }\n\n    handleDelete() {\n        var user = firebase.auth().currentUser;\n\n        user.delete().then(function() {\n            console.log('User deleted');\n            this.props.history.push('/sign-up')\n        }).catch(function(error) {\n            console.log(error, 'An error happened.');\n        });\n    }\n\n    handleChange(e){\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        const { uid, post } = this.state;\n        const path = db.collection(\"Data\").doc(uid)\n        path.collection(\"posts\").add({\n            name: 'admin',\n            post: post,\n            date: new Date(),\n        })\n            .then((res)=> {\n                this.setState({post: ''});\n                console.log('Document successfully written!');\n            })\n            .catch((error) => {\n                console.error(\"Error writing document: \", error);\n            })\n    }\n\n    render() {\n        const { post, data } = this.state;\n        console.log(data, 'data in render')\n        return(\n            <div className=\"mb-3\">\n                <Container>\n                    <Row >\n                        <Col className=\"wrapper\" lg=\"12\">\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>Cras justo odio</ListGroup.Item>\n                                <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n                                <ListGroup.Item>Morbi leo risus</ListGroup.Item>\n                                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                                <ListGroup.Item>Cras justo odio</ListGroup.Item>\n                                <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n                                <ListGroup.Item>Morbi leo risus</ListGroup.Item>\n                                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                                <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col>\n                            <Form >\n                                <Container>\n                                    <Row className=\"mt-3\">\n                                        <Col md=\"10\" sm=\"12\" xs=\"12\" className=\"pt-1 pb-1\">\n                                            <Form.Control type=\"text\" placeholder=\"Type Something in your mind...\" className=\"post-field\" />\n                                        </Col>\n                                        <Col md=\"2\" sm=\"12\" xs=\"12\" className=\"text-center pt-1 pb-1\">\n                                            <Button className=\"post\">Post</Button>\n                                        </Col>\n                                    </Row>\n                                </Container>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Container>\n                {/*<Container style={{padding: \"10px\"}}>*/}\n                {/*    <Form >*/}\n                {/*        <Row className=\"align-items-center\">*/}\n                {/*            <Col md=\"10\" sm=\"10\" xs=\"12\" className=\"p-0 mb-1\">*/}\n                {/*                <FormControl type=\"text\" placeholder=\"Type Something in your mind...\" className=\"post-field\" />*/}\n                {/*            </Col>*/}\n                {/*            <Col className=\"text-center  mb-1\" md=\"2\" sm=\"2\" xs=\"12\">*/}\n                {/*                <Button type=\"submit\" className=\"post\">Post</Button>*/}\n                {/*            </Col>*/}\n                {/*        </Row>*/}\n                {/*    </Form>*/}\n                {/*</Container>*/}\n            </div>\n        )\n    }\n}\n\nexport default Profile","import React, { Component } from 'react';\nimport firebase from \"firebase\";\nimport {Container, Button, Form, FormGroup, Row, Col, Spinner} from 'react-bootstrap';\nimport {NavLink} from \"react-router-dom\";\nimport fire from \"../config/firebase\";\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({\n                loading: false,\n            });\n        }, 2000);\n    }\n\n    handleChange(event){\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    handleSubmit(event)  {\n        event.preventDefault();\n        const { email, password } = this.state;\n        console.log(this.state, 'state------')\n        this.setState({\n            email: '',\n            password: '',\n        })\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .catch(error => {console.log(error, 'error on signin')})\n    }\n\n    render() {\n        const { email, password, loading } = this.state;\n        return (\n            <div className=\"main\">\n                {loading ?\n                    <div>\n                        <Spinner animation=\"grow\" style={{width:\"50px\", height:\"50px\"}}/>\n                    </div>\n                    :\n                    <>\n                        <Form className=\"mb-3 container\" onSubmit={this.handleSubmit.bind(this)}>\n                            <FormGroup className=\"container\">\n                                <Row>\n                                    <Col md=\"2\" sm=\"2\">\n                                        <Form.Label for=\"Email\">Email</Form.Label>\n                                    </Col>\n                                    <Col md=\"10\" sm=\"10\">\n                                        <Form.Control className=\"fields\" type=\"email\" name=\"email\" value={email}\n                                               placeholder=\"something@idk.cool\"\n                                               onChange={this.handleChange.bind(this)}/>\n                                    </Col>\n                                </Row>\n                            </FormGroup>\n                            <FormGroup className=\"container\">\n                                <Row>\n                                    <Col md=\"2\" sm=\"2\">\n                                        <Form.Label for=\"Password\">Password</Form.Label>\n                                    </Col>\n                                    <Col md=\"10\" sm=\"10\">\n                                        <Form.Control className=\"fields\" type=\"password\" name=\"password\" value={password}\n                                               placeholder=\"don't tell!\" onChange={this.handleChange.bind(this)}/>\n                                    </Col>\n                                </Row>\n                            </FormGroup>\n                            <Container>\n                                <Row>\n                                    <Col className=\"text-center\">\n                                        <Button className=\"submit\" type=\"submit\">Submit</Button>\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </Form>\n                        <Container>\n                            <Row>\n                                <Col>\n                                    <NavLink className=\"navlink\" to='/sign-up'>Don't have an account ?</NavLink>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Login","import React, { Component } from 'react';\r\nimport { Container, Button, Form, FormGroup, Row, Col } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom'\r\n// import firebase, {Firestore as db} from \"firebase\";\r\nimport fire, { db } from \"../config/firebase\";\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            password: '',\r\n        }\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    handleSubmit(event)  {\r\n        event.preventDefault();\r\n        const { name, email, phone, password } = this.state;\r\n        console.log(this.state, 'state------')\r\n        const promise = fire.auth().createUserWithEmailAndPassword(email, password);\r\n        promise.then( async (res) => {\r\n                    await res.user.updateProfile({\r\n                        displayName: name\r\n                    })\r\n                        .then(() => {\r\n                            const userUid = fire.auth().currentUser.uid\r\n                            const userRef = db.collection(\"Users\").doc(userUid);\r\n                            userRef.set({\r\n                                name: name,\r\n                                email: email,\r\n                                phone: phone,\r\n                            });\r\n                            this.props.history.push('/profile');\r\n                        })\r\n            })\r\n            .catch(err => {\r\n                console.log(err, 'err-=-=-=-')\r\n            });\r\n    }\r\n\r\n    addUserInfo(uid) {\r\n         console.log(uid, 'addUserInfo=-=-=-')\r\n    }\r\n\r\n    setValues() {\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            password: '',\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { name, email, phone, password, loading } = this.state\r\n        return (\r\n            <div className=\"main\">\r\n                <Form className=\"mb-3 container\" onSubmit={this.handleSubmit.bind(this)}>\r\n                    <FormGroup className=\"container\">\r\n                        <Row>\r\n                            <Col md=\"2\" sm=\"2\">\r\n                                <Form.Label for=\"Name\">Name</Form.Label>\r\n                            </Col>\r\n                            <Col md=\"10\" sm=\"10\">\r\n                                <Form.Control className=\"fields\" type=\"text\" name=\"name\" value={name} placeholder=\"something\" onChange={this.handleChange.bind(this)}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"container\">\r\n                        <Row>\r\n                            <Col md=\"2\" sm=\"2\">\r\n                                <Form.Label for=\"Email\">Email</Form.Label>\r\n                            </Col>\r\n                            <Col md=\"10\" sm=\"10\">\r\n                                <Form.Control className=\"fields\" type=\"email\" name=\"email\" value={email} placeholder=\"something@example.com\" onChange={this.handleChange.bind(this)}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"container\">\r\n                        <Row>\r\n                            <Col md=\"2\" sm=\"2\">\r\n                                <Form.Label for=\"Phone\">Phone</Form.Label>\r\n                            </Col>\r\n                            <Col md=\"10\" sm=\"10\">\r\n                                <Form.Control className=\"fields\" type=\"phone\" name=\"phone\" value={phone} placeholder=\"+92-6546545\" onChange={this.handleChange.bind(this)}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"container\">\r\n                        <Row>\r\n                            <Col md=\"2\" sm=\"2\">\r\n                                <Form.Label for=\"Password\">Password</Form.Label>\r\n                            </Col>\r\n                            <Col md=\"10\" sm=\"10\">\r\n                                <Form.Control className=\"fields\" type=\"password\" name=\"password\" value={password} placeholder=\"don't tell!\" onChange={this.handleChange.bind(this)}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </FormGroup>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"text-center\">\r\n                                <Button className=\"submit\" type=\"submit\">Submit</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Form>\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <NavLink className=\"navlink\" to='/login'>Already have an account</NavLink>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup","import React, { Component } from 'react'\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\n\nclass Footer extends Component{\n    render() {\n        return(\n            <Container>\n                <Row >\n                    <Col className=\"text-right\">\n                        <a className=\"repolink\" href=\"https://github.com/faiqkhan480/react-firestore\">\n                            faiqkhan480.\n                            <FontAwesomeIcon size=\"2x\" icon={faGithub} />\n                        </a>\n\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Footer","import React, { Component } from \"react\";\r\nimport {Button, Container, Navbar} from \"react-bootstrap\";\r\n\r\nclass Menu extends Component{\r\n    render() {\r\n        return(\r\n            <Container className=\"menu\">\r\n                <Navbar>\r\n                    <Navbar.Brand href=\"#\" className=\"brand\">Timbuktu</Navbar.Brand>\r\n                    <Navbar.Toggle />\r\n                    <Navbar.Collapse className=\"justify-content-end\">\r\n                        <Navbar.Text>\r\n                            <Button className=\"outlined-button\" href=\"#/login\" variant=\"outline-info\" >\r\n                                Signed in:\r\n                            </Button>\r\n                        </Navbar.Text>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu","import React, { Component } from 'react';\r\nimport fire from \"./config/firebase\";\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\n// import PageNavbar from './components/PageNavbar';\r\nimport AuthProvider from \"./routes/auth\";\r\nimport ProtectedRoute from \"./routes/protectedRoute\";\r\nimport UnProtectedRoute from \"./routes/unprotectedRoute\"\r\nimport Home from './components/home';\r\nimport Profile from './components/profile';\r\nimport Login from \"./components/login\";\r\nimport Signup from \"./components/signup\";\r\nimport Footer from \"./components/footer\";\r\nimport Menu from \"./components/nav\";\r\n\r\nclass App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uid: '',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fire.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                console.log(user.uid, 'this user is signin')\r\n                this.setState({uid: user.uid})\r\n            } else {\r\n                console.log(\"user is not signin\")\r\n                this.setState({uid: null})\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { uid } = this.state\r\n        return (\r\n            <AuthProvider>\r\n                <HashRouter basename='/'>\r\n                    <Menu />\r\n                    <Switch>\r\n                        <Route exact path='/' component={Home}/>\r\n                        <UnProtectedRoute exact path='/login' component={Login}/>\r\n                        <Route path='/sign-up' component={Signup}/>\r\n                        <ProtectedRoute path='/profile' component={Profile}/>\r\n                    </Switch>\r\n                    <Footer />\r\n                </HashRouter>\r\n            </AuthProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}