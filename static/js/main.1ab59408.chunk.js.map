{"version":3,"sources":["config/firebase.js","routes/auth.js","routes/protectedRoute.js","routes/unprotectedRoute.js","components/profile.js","components/login.js","components/signup.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","AuthContext","React","createContext","AuthProvider","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentUser","_this2","auth","onAuthStateChanged","user","setState","react_default","a","createElement","Provider","value","children","Component","ProtectedRoute","_ref","RouteComponent","component","rest","objectWithoutProperties","useContext","react_router","assign","render","routeProps","to","UnProtectedRoute","Profile","uid","data","post","userUid","arr","console","log","collection","doc","onSnapshot","querySnap","forEach","push","signOut","delete","then","history","catch","error","e","defineProperty","target","name","event","_this3","preventDefault","_this$state","add","date","Date","res","_this$state2","Jumbotron","fluid","className","Container","Row","Col","Button","color","onClick","handleDelete","bind","handleLogout","CardColumns","map","i","Card","key","CardBody","CardTitle","CardText","Form","onSubmit","handleSubmit","form","md","FormGroup","Input","type","placeholder","onChange","handleChange","Progress","animated","Login","email","password","signInWithEmailAndPassword","inline","Label","for","react_router_dom","Signup","phone","promise","createUserWithEmailAndPassword","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","updateProfile","displayName","stop","_x","apply","arguments","err","set","App","basename","unprotectedRoute","exact","path","protectedRoute","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oRAaMA,EAAQC,IAASC,cAXV,CACTC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAINC,EAAKV,IAASW,UAAUZ,GAEtBA,oBCbFa,SAAcC,IAAMC,iBA8BlBC,cA3BX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,YAAa,IAHFR,mFAOC,IAAAS,EAAAN,KAChBrB,EAAK4B,OAAOC,mBAAmB,SAAAC,GAC3BH,EAAKI,SAAS,CAACL,YAAaI,uCAI3B,IACEJ,EAAeL,KAAKI,MAApBC,YACP,OACIM,EAAAC,EAAAC,cAACrB,EAAYsB,SAAb,CACIC,MAAO,CACHV,gBAGHL,KAAKJ,MAAMoB,iBAtBDC,qBCiBZC,EAhBQ,SAAAC,GAA4C,IAA9BC,EAA8BD,EAAzCE,UAA8BC,EAAWxB,OAAAyB,EAAA,EAAAzB,CAAAqB,EAAA,eACxDd,EAAemB,qBAAWhC,GAA1Ba,YACP,OACIM,EAAAC,EAAAC,cAACY,EAAA,EAAD3B,OAAA4B,OAAA,GACQJ,EADR,CAEIK,OAAQ,SAAAC,GAAU,OACZvB,EACEM,EAAAC,EAAAC,cAACO,EAAmBQ,GAEpBjB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUI,GAAI,WCMnBC,EAjBU,SAAAX,GAA4C,IAA9BC,EAA8BD,EAAzCE,UAA8BC,EAAWxB,OAAAyB,EAAA,EAAAzB,CAAAqB,EAAA,eAC1Dd,EAAemB,qBAAWhC,GAA1Ba,YACP,OACIM,EAAAC,EAAAC,cAACY,EAAA,EAAD3B,OAAA4B,OAAA,GACQJ,EADR,CAEIK,OAAQ,SAAAC,GAAU,OACbvB,EAGGM,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUI,GAAI,aAFdlB,EAAAC,EAAAC,cAACO,EAAmBQ,gIC0HzBG,cAlHX,SAAAA,EAAYnC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+B,IACdlC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiC,GAAA5B,KAAAH,KAAMJ,KACDQ,MAAQ,CACT4B,IAAK,GACLC,KAAM,KACNC,KAAM,IALIrC,mFASE,IAAAS,EAAAN,KACVmC,EAAUxD,EAAK4B,OAAOF,YAAY2B,IAClCI,EAAO,GACbpC,KAAKU,SAAS,CAACsB,IAAKG,IACpBE,QAAQC,IAAIH,EAAS,mBACL7C,EAAGiD,WAAW,QAAQC,IAAIL,GAClCI,WAAW,SACdE,WAAW,SAACC,GACTA,EAAUC,QAAQ,SAACH,GACfJ,EAAIQ,KAAKJ,EAAIP,UAEjB3B,EAAKI,SAAS,CAACuB,KAAMG,6CAK7BzD,EAAK4B,OAAOsC,iDAIDjE,IAAS2B,OAAOF,YAEtByC,SAASC,KAAK,WACfV,QAAQC,IAAI,gBACZtC,KAAKJ,MAAMoD,QAAQJ,KAAK,cACzBK,MAAM,SAASC,GACdb,QAAQC,IAAIY,EAAO,6DAIdC,GACTnD,KAAKU,SAALZ,OAAAsD,EAAA,EAAAtD,CAAA,GAAgBqD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOtC,6CAGhCwC,GAAM,IAAAC,EAAAxD,KACfuD,EAAME,iBADS,IAAAC,EAEO1D,KAAKI,MAAnB4B,EAFO0B,EAEP1B,IAAKE,EAFEwB,EAEFxB,KACA5C,EAAGiD,WAAW,QAAQC,IAAIR,GAClCO,WAAW,SAASoB,IAAI,CACzBL,KAAM,QACNpB,KAAMA,EACN0B,KAAM,IAAIC,OAETd,KAAK,SAACe,GACHN,EAAK9C,SAAS,CAACwB,KAAM,KACrBG,QAAQC,IAAI,oCAEfW,MAAM,SAACC,GACJb,QAAQa,MAAM,2BAA4BA,sCAI7C,IAAAa,EACkB/D,KAAKI,MAApB8B,EADH6B,EACG7B,KAAMD,EADT8B,EACS9B,KACd,OACItB,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,aACpBjC,EAKHtB,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAWF,OAAK,GACZtD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACIzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAKH,UAAU,UACXvD,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAQC,MAAM,SAASC,QAASxE,KAAKyE,aAAaC,KAAK1E,OAAvD,aAEJW,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAKH,UAAU,UACXvD,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAQC,MAAM,SAASC,QAASxE,KAAK2E,aAAaD,KAAK1E,OAAvD,cAGRW,EAAAC,EAAAC,cAACuD,EAAA,EAAD,KACEzD,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAaV,UAAU,QAEfjC,EAAK4C,IAAI,SAAErC,EAAKsC,GACZ,OACInE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAMC,IAAKF,GACPnE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,KACItE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,KAAY1C,EAAIc,MAChB3C,EAAAC,EAAAC,cAACsE,EAAA,EAAD,KAAW3C,EAAIN,MACfvB,EAAAC,EAAAC,cAACyD,EAAA,EAAD,qBAQ1B3D,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAMlB,UAAU,cAAcmB,SAAUrF,KAAKsF,aAAaZ,KAAK1E,OAC3DW,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAKmB,MAAI,GACL5E,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAKmB,GAAI,IACL7E,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,KACI9E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,KAAK,OAAMC,YAAY,QAAQtC,KAAK,OAAOvC,MAAOmB,EAAM2D,SAAU7F,KAAK8F,aAAapB,KAAK1E,UAGxGW,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAKmB,GAAI,GACL7E,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAQC,MAAM,UAAUoB,KAAK,UAA7B,cAtCZhF,EAAAC,EAAAC,cAAA,OAAKqD,UAAU,WACXvD,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAUC,UAAQ,EAACzB,MAAM,UAAUxD,MAAM,iBApE3CtB,IAAMwB,mBCuCbgF,cAjDX,SAAAA,EAAYrG,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiG,IACfpG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmG,GAAA9F,KAAAH,KAAMJ,KACDQ,MAAQ,CACT8F,MAAO,GACPC,SAAU,IAJCtG,4EAYN0D,GACTvD,KAAKU,SAALZ,OAAAsD,EAAA,EAAAtD,CAAA,GAAgByD,EAAMF,OAAOC,KAAOC,EAAMF,OAAOtC,6CAGxCwC,GACTA,EAAME,iBADW,IAAAC,EAEW1D,KAAKI,MAAzB8F,EAFSxC,EAETwC,MAAOC,EAFEzC,EAEFyC,SACf9D,QAAQC,IAAItC,KAAKI,MAAO,eACxBJ,KAAKU,SAAS,CACVwF,MAAO,GACPC,SAAU,KAEdvH,IAAS2B,OAAO6F,2BAA2BF,EAAOC,GAC7ClD,MAAM,SAAAC,GAAUb,QAAQC,IAAIY,EAAO,sDAGnC,IAAAa,EACuB/D,KAAKI,MAAzB8F,EADHnC,EACGmC,MAAOC,EADVpC,EACUoC,SACf,OACIxF,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAWD,UAAU,WACjBvD,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAMiB,QAAM,EAAChB,SAAUrF,KAAKsF,aAAaZ,KAAK1E,OAC1CW,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAWvB,UAAU,wBACjBvD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOC,IAAI,QAAQrC,UAAU,WAA7B,SACAvD,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,KAAK,QAAQrC,KAAK,QAAQvC,MAAOmF,EAAON,YAAY,qBAAqBC,SAAU7F,KAAK8F,aAAapB,KAAK1E,SAErHW,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAWvB,UAAU,wBACjBvD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOC,IAAI,WAAWrC,UAAU,WAAhC,YACAvD,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,KAAK,WAAWrC,KAAK,WAAYvC,MAAOoF,EAAUP,YAAY,cAAcC,SAAU7F,KAAK8F,aAAapB,KAAK1E,SAExHW,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAQqB,KAAK,UAAb,WAEJhF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAS3E,GAAG,YAAZ,mCA5CIZ,sCCoFLwF,cApFX,SAAAA,EAAY7G,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyG,IACf5G,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2G,GAAAtG,KAAAH,KAAMJ,KACDQ,MAAQ,CACTkD,KAAM,GACN4C,MAAO,GACPQ,MAAO,GACPP,SAAU,IANCtG,4EAUN0D,GACTvD,KAAKU,SAALZ,OAAAsD,EAAA,EAAAtD,CAAA,GAAgByD,EAAMF,OAAOC,KAAOC,EAAMF,OAAOtC,6CAGxCwC,GAAQ,IAAAjD,EAAAN,KACjBuD,EAAME,iBADW,IAAAC,EAEwB1D,KAAKI,MAAtCkD,EAFSI,EAETJ,KAAM4C,EAFGxC,EAEHwC,MAAOQ,EAFJhD,EAEIgD,MAAOP,EAFXzC,EAEWyC,SAC5B9D,QAAQC,IAAItC,KAAKI,MAAO,eACxB,IAAMuG,EAAUhI,EAAK4B,OAAOqG,+BAA+BV,EAAOC,GAClEQ,EAAQ5D,KAAR,eAAA5B,EAAArB,OAAA+G,EAAA,EAAA/G,CAAAgH,EAAAlG,EAAAmG,KAAc,SAAAC,EAAOlD,GAAP,OAAAgD,EAAAlG,EAAAqG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACItD,EAAIrD,KAAK4G,cAAc,CACzBC,YAAahE,IAFf,wBAAA4D,EAAAK,SAAAP,MAAd,gBAAAQ,GAAA,OAAArG,EAAAsG,MAAAzH,KAAA0H,YAAA,IAKKzE,MAAM,SAAA0E,GACHtF,QAAQC,IAAIqF,EAAK,gBAEzBhB,EAAQ5D,KAAK,WACT,IAAMZ,EAAUxD,EAAK4B,OAAOF,YAAY2B,IACxB1C,EAAGiD,WAAW,QAAQC,IAAIL,GAClCyF,IAAI,CACRtE,KAAMA,EACN4C,MAAOA,EACPQ,MAAOA,IAEXpG,EAAKV,MAAMoD,QAAQJ,KAAK,kDAKpBZ,GACPK,QAAQC,IAAIN,EAAK,yDAIlBhC,KAAKU,SAAS,CACV4C,KAAM,GACN4C,MAAO,GACPQ,MAAO,GACPP,SAAU,sCAMT,IAAApC,EACoC/D,KAAKI,MAAtCkD,EADHS,EACGT,KAAM4C,EADTnC,EACSmC,MAAOQ,EADhB3C,EACgB2C,MAAOP,EADvBpC,EACuBoC,SAC5B,OACIxF,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAWD,UAAU,WACjBvD,EAAAC,EAAAC,cAACuE,EAAA,EAAD,CAAMC,SAAUrF,KAAKsF,aAAaZ,KAAK1E,OACnCW,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAWvB,UAAU,wBACjBvD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOC,IAAI,YAAYrC,UAAU,WAAjC,QACAvD,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,KAAK,OAAOrC,KAAK,OAAOvC,MAAOuC,EAAMsC,YAAY,YAAYC,SAAU7F,KAAK8F,aAAapB,KAAK1E,SAEzGW,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAWvB,UAAU,wBACjBvD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOC,IAAI,QAAQrC,UAAU,WAA7B,SACAvD,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,KAAK,QAAQrC,KAAK,QAAQvC,MAAOmF,EAAON,YAAY,qBAAqBC,SAAU7F,KAAK8F,aAAapB,KAAK1E,SAErHW,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAWvB,UAAU,wBACjBvD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOC,IAAI,QAAQrC,UAAU,WAA7B,SACAvD,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,KAAK,QAAQrC,KAAK,QAAQvC,MAAO2F,EAAOd,YAAY,cAAcC,SAAU7F,KAAK8F,aAAapB,KAAK1E,SAE9GW,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAWvB,UAAU,wBACjBvD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOC,IAAI,WAAWrC,UAAU,WAAhC,YACAvD,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAOC,KAAK,WAAWrC,KAAK,WAAWvC,MAAOoF,EAAUP,YAAY,cAAcC,SAAU7F,KAAK8F,aAAapB,KAAK1E,SAEvHW,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAQqB,KAAK,UAAb,WAEJhF,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAS3E,GAAG,KAAZ,mCA/EKZ,aCyCN4G,cAlCX,SAAAA,EAAYjI,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6H,IACfhI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+H,GAAA1H,KAAAH,KAAMJ,KACDQ,MAAQ,CACT4B,IAAK,IAHMnC,mFAMC,IAAAS,EAAAN,KAChBrB,EAAK4B,OAAOC,mBAAmB,SAAAC,GACxBA,GACC4B,QAAQC,IAAI7B,EAAKuB,IAAK,uBACtB1B,EAAKI,SAAS,CAACsB,IAAKvB,EAAKuB,QAEzBK,QAAQC,IAAI,sBACZhC,EAAKI,SAAS,CAACsB,IAAK,2CAMZhC,KAAKI,MAAb4B,IACR,OACIrB,EAAAC,EAAAC,cAACN,EAAD,KACII,EAAAC,EAAAC,cAAC2F,EAAA,EAAD,CAAYsB,SAAS,KACjBnH,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACId,EAAAC,EAAAC,cAACkH,EAAD,CAAkBC,OAAK,EAACC,KAAK,IAAI5G,UAAW4E,IAC5CtF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAOwG,KAAK,WAAW5G,UAAWoF,IAClC9F,EAAAC,EAAAC,cAACqH,EAAD,CAAgBD,KAAK,WAAW5G,UAAWU,cA3BjDd,aCAEkH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAAS7G,OAAOhB,EAAAC,EAAAC,cAAC4H,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/F,KAAK,SAAAgG,GACjCA,EAAaC","file":"static/js/main.1ab59408.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyCsc_C7QIiBzCpPcyKBsFvsuEccHHOW-a8\",\r\n    authDomain: \"todo-c64e8.firebaseapp.com\",\r\n    databaseURL: \"https://todo-c64e8.firebaseio.com\",\r\n    projectId: \"todo-c64e8\",\r\n    storageBucket: \"todo-c64e8.appspot.com\",\r\n    messagingSenderId: \"867932857254\",\r\n    appId: \"1:867932857254:web:92f8cbf72bf352f1332567\",\r\n    measurementId: \"G-4LGGPN3MGY\"\r\n};\r\n\r\nconst fire =  firebase.initializeApp(config);\r\nexport const db = firebase.firestore(fire);\r\n\r\nexport default fire","import React, { useEffect, useState, Component } from \"react\";\r\nimport fire from \"../config/firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nclass AuthProvider extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentUser: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fire.auth().onAuthStateChanged(user => {\r\n            this.setState({currentUser: user})\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {currentUser} = this.state\r\n        return(\r\n            <AuthContext.Provider\r\n                value={{\r\n                    currentUser\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </AuthContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthProvider","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./auth\";\r\nimport fire from \"../config/firebase\";\r\n\r\n\r\nconst ProtectedRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const {currentUser} = useContext(AuthContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                !!currentUser ? (\r\n                    <RouteComponent {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={\"/\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n;\r\nexport default ProtectedRoute","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./auth\";\r\n\r\nconst UnProtectedRoute = ({ component: RouteComponent, ...rest }) => {\r\n    const {currentUser} = useContext(AuthContext);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                !currentUser ? (\r\n                    <RouteComponent {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={\"/profile\"} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\n\r\nexport default UnProtectedRoute","import React from 'react';\r\nimport firebase from \"firebase\";\r\nimport fire, { db } from \"../config/firebase\";\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Progress,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Card,\r\n    CardColumns,\r\n    CardBody,\r\n    CardTitle, CardSubtitle, CardText, Jumbotron, Spinner\r\n} from 'reactstrap'\r\n\r\nclass Profile extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            uid: '',\r\n            data: null,\r\n            post: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userUid = fire.auth().currentUser.uid;\r\n        const arr  = [];\r\n        this.setState({uid: userUid});\r\n        console.log(userUid, 'is sign in.....')\r\n        const userRef = db.collection(\"Data\").doc(userUid);\r\n        userRef.collection(\"posts\")\r\n            .onSnapshot((querySnap) => {\r\n                querySnap.forEach((doc) => {\r\n                    arr.push(doc.data())\r\n                })\r\n                this.setState({data: arr});\r\n            });\r\n    }\r\n\r\n    handleLogout() {\r\n        fire.auth().signOut();\r\n    }\r\n\r\n    handleDelete() {\r\n        var user = firebase.auth().currentUser;\r\n\r\n        user.delete().then(function() {\r\n            console.log('User deleted');\r\n            this.props.history.push('/sign-up')\r\n        }).catch(function(error) {\r\n            console.log(error, 'An error happened.');\r\n        });\r\n    }\r\n\r\n    handleChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        const { uid, post } = this.state;\r\n        const path = db.collection(\"Data\").doc(uid)\r\n        path.collection(\"posts\").add({\r\n            name: 'admin',\r\n            post: post,\r\n            date: new Date(),\r\n        })\r\n            .then((res)=> {\r\n                this.setState({post: ''});\r\n                console.log('Document successfully written!');\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error writing document: \", error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { post, data } = this.state;\r\n        return(\r\n            <Jumbotron fluid className=\"jumbotron\">\r\n                { !data ?\r\n                    <div className=\"loading\">\r\n                        <Progress animated color=\"primary\" value=\"100\" />\r\n                    </div>\r\n                    :\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col className=\"logout\">\r\n                            <Button color=\"danger\" onClick={this.handleDelete.bind(this)}> Delete </Button>\r\n                        </Col>\r\n                        <Col className=\"logout\">\r\n                            <Button color=\"danger\" onClick={this.handleLogout.bind(this)}> logOut </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                      <CardColumns className=\"data\">\r\n                          {\r\n                              data.map(( doc, i )=> {\r\n                                  return (\r\n                                      <Card key={i}>\r\n                                          <CardBody>\r\n                                              <CardTitle>{doc.name}</CardTitle>\r\n                                              <CardText>{doc.post}</CardText>\r\n                                              <Button>Delete</Button>\r\n                                          </CardBody>\r\n                                      </Card>\r\n                                  )\r\n                              })\r\n                          }\r\n                      </CardColumns>\r\n                    </Row>\r\n                    <Form className=\"bottom-form\" onSubmit={this.handleSubmit.bind(this)}>\r\n                        <Row form>\r\n                            <Col md={10}>\r\n                                <FormGroup>\r\n                                    <Input type=\"text\"placeholder=\"Posts\" name=\"post\" value={post} onChange={this.handleChange.bind(this)}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col md={1}>\r\n                                <Button color=\"primary\" type=\"submit\">Submit</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>}\r\n            </Jumbotron>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","import React, { Component } from 'react';\r\nimport firebase from \"firebase\";\r\nimport { Container, Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport fire from \"../config/firebase\";\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n    }\r\n    // componentDidMount() {\r\n    //     const user = fire.routes().currentUser\r\n    //     console.log(user.displayName, 'displayName=-=-=-=-')\r\n    // }\r\n\r\n    handleChange(event){\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    handleSubmit(event)  {\r\n        event.preventDefault();\r\n        const { email, password } = this.state;\r\n        console.log(this.state, 'state------')\r\n        this.setState({\r\n            email: '',\r\n            password: '',\r\n        })\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .catch(error => {console.log(error, 'error on signin')})\r\n    }\r\n\r\n    render() {\r\n        const { email, password } = this.state;\r\n        return (\r\n            <Container className=\"wrapper\">\r\n                <Form inline onSubmit={this.handleSubmit.bind(this)}>\r\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                        <Label for=\"Email\" className=\"mr-sm-2\">Email</Label>\r\n                        <Input type=\"email\" name=\"email\" value={email} placeholder=\"something@idk.cool\" onChange={this.handleChange.bind(this)} />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                        <Label for=\"Password\" className=\"mr-sm-2\">Password</Label>\r\n                        <Input type=\"password\" name=\"password\"  value={password} placeholder=\"don't tell!\" onChange={this.handleChange.bind(this)} />\r\n                    </FormGroup>\r\n                    <Button type=\"submit\">Submit</Button>\r\n                </Form>\r\n                <NavLink to='/sign-up'>Don't have an account ?</NavLink>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react';\r\nimport {Button, Form, FormGroup, Label, Input, Container} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom'\r\n// import firebase, {Firestore as db} from \"firebase\";\r\nimport fire, { db } from \"../config/firebase\";\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            password: '',\r\n        }\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    handleSubmit(event)  {\r\n        event.preventDefault();\r\n        const { name, email, phone, password } = this.state;\r\n        console.log(this.state, 'state------')\r\n        const promise = fire.auth().createUserWithEmailAndPassword(email, password);\r\n        promise.then( async (res) => {\r\n                    await res.user.updateProfile({\r\n                        displayName: name\r\n                    });\r\n            })\r\n            .catch(err => {\r\n                console.log(err, 'err-=-=-=-')\r\n            });\r\n        promise.then(() => {\r\n            const userUid = fire.auth().currentUser.uid\r\n            const userRef = db.collection(\"Data\").doc(userUid);\r\n            userRef.set({\r\n                name: name,\r\n                email: email,\r\n                phone: phone,\r\n            });\r\n            this.props.history.push('/profile');\r\n        })\r\n\r\n    }\r\n\r\n    addUserInfo(uid) {\r\n         console.log(uid, 'addUserInfo=-=-=-')\r\n    }\r\n\r\n    setValues() {\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            password: '',\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { name, email, phone, password } = this.state\r\n        return (\r\n            <Container className=\"wrapper\">\r\n                <Form onSubmit={this.handleSubmit.bind(this)}>\r\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                        <Label for=\"User Name\" className=\"mr-sm-2\">Name</Label>\r\n                        <Input type=\"text\" name=\"name\" value={name} placeholder=\"something\" onChange={this.handleChange.bind(this)}/>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                        <Label for=\"Email\" className=\"mr-sm-2\">Email</Label>\r\n                        <Input type=\"email\" name=\"email\" value={email} placeholder=\"something@idk.cool\" onChange={this.handleChange.bind(this)}/>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                        <Label for=\"Email\" className=\"mr-sm-2\">Phone</Label>\r\n                        <Input type=\"phone\" name=\"phone\" value={phone} placeholder=\"+92-6546545\" onChange={this.handleChange.bind(this)}/>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n                        <Label for=\"Password\" className=\"mr-sm-2\">Password</Label>\r\n                        <Input type=\"password\" name=\"password\" value={password} placeholder=\"don't tell!\" onChange={this.handleChange.bind(this)}/>\r\n                    </FormGroup>\r\n                    <Button type=\"submit\">Submit</Button>\r\n                </Form>\r\n                <NavLink to='/'>Already have an account</NavLink>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup","import React, { Component } from 'react';\r\nimport fire from \"./config/firebase\";\r\nimport { BrowserRouter as Router, HashRouter, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\n// import PageNavbar from './components/PageNavbar';\r\nimport AuthProvider from \"./routes/auth\";\r\nimport ProtectedRoute from \"./routes/protectedRoute\";\r\nimport UnProtectedRoute from \"./routes/unprotectedRoute\"\r\nimport Profile from './components/profile';\r\nimport Login from \"./components/login\";\r\nimport Signup from \"./components/signup\";\r\n\r\nclass App extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uid: '',\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fire.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                console.log(user.uid, 'this user is signin')\r\n                this.setState({uid: user.uid})\r\n            } else {\r\n                console.log(\"user is not signin\")\r\n                this.setState({uid: null})\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { uid } = this.state\r\n        return (\r\n            <AuthProvider>\r\n                <HashRouter basename='/'>\r\n                    <Switch>\r\n                        <UnProtectedRoute exact path='/' component={Login}/>\r\n                        <Route path='/sign-up' component={Signup}/>\r\n                        <ProtectedRoute path='/profile' component={Profile}/>\r\n                    </Switch>\r\n                </HashRouter>\r\n            </AuthProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n// <div className=\"App\">\r\n//     {uid ? <Profile/> : <Login/>}\r\n// </div>","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}